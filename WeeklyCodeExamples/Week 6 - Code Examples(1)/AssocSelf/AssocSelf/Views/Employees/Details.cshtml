@model AssocSelf.Controllers.EmployeeWithOrgInfoViewModel

@{
    ViewBag.Title = "Employee details";
}

<h2>Employee details</h2>

<div>
    <h4>@Model.FullName</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            Employee name
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LastName), @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BirthDate)
        </dt>

        <dd>
            @{
                var niceDate = "";
                if (Model.BirthDate.HasValue)
                {
                    niceDate = Model.BirthDate.GetValueOrDefault().ToLongDateString();
                }
            }
            @niceDate
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.HireDate)
        </dt>

        <dd>
            @{
                niceDate = "";
                if (Model.HireDate.HasValue)
                {
                    niceDate = Model.HireDate.GetValueOrDefault().ToLongDateString();
                }
            }
            @niceDate
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)<br />
            @Html.DisplayFor(model => model.City) @Html.DisplayFor(model => model.State) @Html.DisplayFor(model => model.PostalCode)<br />
            @Html.DisplayFor(model => model.Country)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Phone)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Phone)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Fax)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Fax)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt></dt>
        <dd><hr /></dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReportsTo)
        </dt>

        <dd>
            @{
                var boss = "";
                // Validate that there's an associated object
                if (Model.ReportsTo != null)
                {
                    boss = string.Format("{0}, {1} ({2})", Model.ReportsTo.LastName, Model.ReportsTo.FirstName, Model.ReportsTo.Title);
                }
            }
            @boss
        </dd>

        <dt></dt>
        <dd><hr /></dd>

        <dt>
            Direct reports
        </dt>

        <dd>
            @if (Model.DirectReports.Count() > 0)
            {
                foreach (var item in Model.DirectReports)
                {
                    <span>@item.LastName, @item.FirstName</span><br />
                }
            }
            else
            {
                <span>(none)</span>
            }
        </dd>

    </dl>
</div>
<hr />
<p>
    @Html.ActionLink("Edit supervisor", "EditSupervisor", new { id = Model.EmployeeId }, htmlAttributes: new { @class = "btn btn-primary", @role = "button" })
    @Html.ActionLink("Edit direct reports", "EditDirectReports", new { id = Model.EmployeeId }, htmlAttributes: new { @class = "btn btn-info", @role = "button" })
    @Html.ActionLink("Back to List", "Index", routeValues: null, htmlAttributes: new { @class = "btn btn-default", @role = "button" })
</p>
